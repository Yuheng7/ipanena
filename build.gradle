plugins {
	id 'idea'
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.yuphanie'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets {
	functionalTest {
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

//apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'
//
//
//gretty {
//	contextPath = '/'
//	integrationTestTask = 'functionalTest'
//	servletContainer = 'jetty9.4'
//}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	functionalTestCompile.extendsFrom testCompile
	functionalTestRuntime.extendsFrom testRuntime
}
repositories {
	mavenCentral()
}

task createDB(type: Exec){
	workingDir 'db'
	commandLine './create.sh'
}

task dropDB(type: Exec){
	workingDir 'db'
	commandLine './drop.sh'
}

task installChromeDriver(type: Exec) {
	commandLine './chromedriver.sh'
}

task functionalTest(type: Test) {
	testClassesDirs = sourceSets.functionalTest.output.classesDirs
	classpath = sourceSets.functionalTest.runtimeClasspath + sourceSets.main.runtimeClasspath
	reports.junitXml.destination file("$reports.junitXml.destination/functional")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
	runtimeOnly 'org.postgresql:postgresql'
	testCompile 'junit:junit:4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	functionalTestCompile 'org.seleniumhq.selenium:selenium-java:3.8.1'
	functionalTestCompile 'com.codeborne:phantomjsdriver:1.4.3'
}

idea {
	module {
		testSourceDirs += file('src/functionalTest/java')
		testSourceDirs += file('src/functionalTest/resources')
	}
}
